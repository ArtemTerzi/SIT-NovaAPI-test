{"version":3,"file":"static/js/855.51127524.chunk.js","mappings":"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","sources":["components/DevInfo/DevInfo.styled.jsx","components/DevInfo/index.js","components/DevInfo/DevInfo.jsx","pages/HomePage/HomePage.styled.jsx","pages/HomePage/index.js","pages/HomePage/HomePage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const DevContainer = styled.div`\n  position: absolute;\n  left: 50%;\n  top: -25px;\n\n  transform: translateX(-50%);\n`;\n\nexport const Person = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  width: 74px;\n  position: relative;\n\n  transform: scale(0.55);\n\n  &:hover > div:last-child {\n    opacity: 1;\n  }\n`;\n\nexport const Container = styled.div`\n  border-radius: 50%;\n  height: 50px;\n  -webkit-tap-highlight-color: transparent;\n  transform: scale(0.48);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  width: 400px;\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(0.54);\n  }\n\n  &:hover > div > img:last-child {\n    transform: translateY(0) scale(1.2);\n  }\n`;\n\nexport const ContainerInner = styled.div`\n  clip-path: path(\n    \"M 390,400 C 390,504.9341 304.9341,590 200,590 95.065898,590 10,504.9341 10,400 V 10 H 200 390 Z\"\n  );\n  position: relative;\n  transform-origin: 50%;\n`;\n\nexport const Avatar = styled.img`\n  pointer-events: none;\n  position: relative;\n  transform: translateY(20px) scale(1.15);\n  transform-origin: 50% bottom;\n  transition: transform 300ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  left: 22px;\n  top: 164px;\n  overflow: hidden;\n  width: 340px;\n`;\n\nexport const Circle = styled.img`\n  background-color: #fee7d3;\n  border-radius: 50%;\n  cursor: pointer;\n  height: 380px;\n  left: 10px;\n  pointer-events: none;\n  position: absolute;\n  top: 210px;\n  width: 380px;\n`;\n\nexport const Divider = styled.div`\n  position: absolute;\n  top: 0;\n  left: 70%;\n  display: flex;\n  padding: 4px;\n  flex-direction: column;\n  width: 230px;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(225, 225, 225, 0.6);\n  border: 1px solid yellow;\n  opacity: 0;\n  transition: opacity 0.3s ease;\n  cursor: pointer;\n`;\n\nexport const Name = styled.div`\n  margin-top: 10px;\n  font-size: 26px;\n  text-align: center;\n  font-weight: bold;\n  font-style: italic;\n  color: #404245;\n`;\n\nexport const TitlePosition = styled.div`\n  font-size: 26px;\n  font-style: italic;\n  margin-top: 4px;\n  color: #6e6e6e;\n`;\n","import DevInfo from \"./DevInfo\";\n\nexport default DevInfo;\n","import photo from \"assets/developer/dev.png\";\nimport bg from \"assets/developer/bg.jpg\";\nimport {\n  Avatar,\n  Circle,\n  Container,\n  ContainerInner,\n  Divider,\n  DevContainer,\n  Name,\n  Person,\n  TitlePosition,\n} from \"./DevInfo.styled\";\n\nconst DevInfo = () => {\n  return (\n    <DevContainer>\n      <Person>\n        <Container>\n          <ContainerInner>\n            <Circle src={bg} alt=\"Color abstraction\" width={40} height={40} />\n            <Avatar src={photo} alt=\"Developer\" width={40} height={40} />\n          </ContainerInner>\n        </Container>\n        <Divider>\n          <Name>Artem Terzi</Name>\n          <TitlePosition>Fullstack developer</TitlePosition>\n        </Divider>\n      </Person>\n    </DevContainer>\n  );\n};\n\nexport default DevInfo;\n","import styled from \"@emotion/styled\";\nimport { selectTablet } from \"utils/selectMediaReq\";\n\nexport const Home = styled.div`\n  display: flex;\n  justify-content: center;\n\n  @media ${selectTablet} {\n    margin: -40px 0;\n  }\n`;\n\nexport const AdditionalInfo = styled.div`\n  padding: 16px;\n  max-width: 600px;\n  text-align: center;\n\n  background-color: white;\n  border-radius: 12px;\n  border: 1px solid ${({ theme }) => theme.colors.primary};\n`;\n\nexport const AboutDeveloper = styled.div`\n  position: relative;\n  height: 200px;\n`;\n\nexport const TS = styled.div`\n  max-width: 600px;\n\n  margin-top: 12px;\n  text-align: start;\n`;\n","import HomePage from \"./HomePage\";\n\nexport default HomePage;\n","import DevInfo from \"components/DevInfo\";\nimport { AboutDeveloper, AdditionalInfo, Home, TS } from \"./HomePage.styled\";\n\nconst HomePage = () => {\n  return (\n    <Home>\n      <AdditionalInfo>\n        <AboutDeveloper>\n          <DevInfo />\n        </AboutDeveloper>\n        <b>\n          <i>\n            Welcome! <br />\n            Here you will see the result of the test task. <br />\n          </i>\n        </b>\n        <TS>\n          <b>FUNCTIONAL REQUIREMENTS:</b> <br />\n          <span style={{ fontSize: 16 }}>\n            <b>1)</b> The user enters the TTN number or his invoice number in\n            the input field on the page.\n            <br />\n            <b>2)</b> The application sends a request to receive data on the\n            current status of the place of delivery of the goods.\n            <br />\n            <b>3)</b> We display information about the shipment to the user.{\" \"}\n            <br />\n            <b>4)</b> The user must see all previous TTN numbers in the form of\n            a list in the sitebar. Even after reloading the page. <br />\n            <b>5)</b> By clicking on the TTN number already added to the entered\n            list, a request for the status of finding the product (delivery)\n            should be automatically performed and the corresponding information\n            displayed. In this case, the TTN number should be automatically\n            displayed in the input field. <br />\n            <b>6)</b> The TTN number of the invoice must be checked when\n            entering it for correctness. Or by means of comparing each character\n            with the required encoding range or regular expression. <br />\n            <b>7)</b> It should be possible to clear all old TTN. <br />\n            <b>8)</b> If the format is incorrect, after pressing the button to\n            get the delivery status of the TTN, a prompt must be shown and the\n            request should not be sent. <br />\n            <b>9)</b> By going to the second tab, the user should be able to see\n            a list of New Mail branches, for which you need to make an\n            appropriate request to the New Mail API and display them as a list\n            at your discretion.\n          </span>\n        </TS>\n      </AdditionalInfo>\n    </Home>\n  );\n};\n\nexport default HomePage;\n"],"names":["DevContainer","styled","div","_templateObject","_taggedTemplateLiteral","Person","_templateObject2","Container","_templateObject3","ContainerInner","_templateObject4","Avatar","img","_templateObject5","Circle","_templateObject6","Divider","_templateObject7","Name","_templateObject8","TitlePosition","_templateObject9","_jsx","children","_jsxs","src","bg","alt","width","height","photo","Home","selectTablet","AdditionalInfo","_ref","theme","colors","primary","AboutDeveloper","TS","DevInfo","style","fontSize"],"sourceRoot":""}